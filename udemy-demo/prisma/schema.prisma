// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int         @id @default(autoincrement())
  email      String      @unique
  password   String
  instructor Instructor?
}

model Instructor {
  id      Int      @id @default(autoincrement())
  name    String
  zip     String
  country String
  city    String
  courses Course[]
  user    User?    @relation(fields: [userId], references: [id])
  userId  Int?     @unique
}

model Course {
  id           Int         @id @default(autoincrement())
  title        String
  desc         String
  duration     Float
  createdAt    DateTime    @default(now())
  videos       Video[]
  Instructor   Instructor? @relation(fields: [instructorId], references: [id])
  instructorId Int?
}

model Video {
  id           Int           @id @default(autoincrement())
  title        String
  desc         String
  Course       Course?       @relation(fields: [courseId], references: [id])
  courseId     Int?
  videoDetails VideoDetails?
}

model VideoDetails {
  id              Int     @id @default(autoincrement())
  key             String?
  metaData        String?
  url             String
  hostingProvider String
  video           Video?  @relation(fields: [videoId], references: [id])
  videoId         Int?    @unique
}

// You have to create Customer, Address and the Application Model
// One to one relation with Customer and Address
// One to many relation with Customer and Application

model Customer {
  id           Int           @id @default(autoincrement())
  name         String
  email        String        @unique
  address      Address?      @relation(fields: [addressId], references: [id])
  applications Application[]
  addressId    Int?          @unique
}

model Address {
  id       Int       @id @default(autoincrement())
  zip      String?
  city     String
  country  String
  Customer Customer?
}

enum APPLICATION_TYPE {
  LOAN
  CAR_FINANCING
  BUSINESS_FINANCING
}

model Application {
  id     Int              @id @default(autoincrement())
  type   APPLICATION_TYPE
  tenure String
  amount Int

  Customer   Customer? @relation(fields: [customerId], references: [id])
  customerId Int?
}
